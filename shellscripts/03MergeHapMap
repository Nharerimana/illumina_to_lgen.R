#!/bin/bash

#AffymetrixAnnotationsDefault=~/GenomeWideSNP_6.na35.annot.csv
AutosomeDefault=False
BfileDefault=~/QC/relatedness_steps/04without_relateds
GenotypingThresholdDefault=0.01
HapMapDirDefault=/home/wheelerlab2/Data/HAPMAP3_hg18/
MafDefault=0.05
OutputDirDefault=~/QC
PCADefault=10
PrefilterDefault=none
RunAffyDefault=F

while :
do
    case "$1" in
      --affy) #same as normal plink - Path to all files and the shared prefix
	        AffymetrixAnnotations="$2"  
	        RunAffy=T
	        shift 2
	        ;;
     # -a | --autosome) #flag for filtering by autosome
	#        Autosome=True
	 #       shift 1
	  #      ;;
      -b | --bfile) #same as normal plink - Path to all files and the shared prefix
	        BFile="$2"  
	        shift 2
	        ;;
      --bim) #/path/to/file.bim
         	BimFile="$2"
	        shift 2
	        ;;
      --bed) #/path/to/file.bed
      	 	BedFile="$2"
	        shift 2
	        ;;
      --fam) #/path/to/file.fam
      		FamFile="$2"
	        shift 2
	        ;;
      -g | --geno) #threshold to filter genotyping rate by
      	  	GenotypingThreshold="$2"
	        shift 2
	        ;;
      -h | --hapmap) #/path/to/hapmapdirectory
      		HapMapDir="$2"
	        shift 2
	        ;;
      --maf) #minor allele frequency threshold
         	Maf="$2"
	        shift 2
		;;
      -o | --output) #directory where you'd like to send all your QC folders - will be folder hierarchy
         	OutputDir="$2"
	        shift 2
		;;
      -pca) #How many principle components you would like to calculate
         	PCA="$2"
	        shift 2
		;;
      -r | --remove) #list of individuals you would like to remove
      	  	RemoveList="$2"
		Prefilter=remove
	        shift 2
	        ;;
      -*) #unknown 
      	  echo "Error: Unknown option: $1" >&2
	        exit 1
	        ;;
      *)  # No more options
          shift
	        break
	        ;;
     esac
done

echo "Using bim file ${BimFile:=${BFile:=$BfileDefault}.bim}"
echo "Using bed file ${BedFile:=${BFile:=$BfileDefault}.bed}"
echo "Using fam file ${FamFile:=${BFile:=$BfileDefault}.fam}"
echo "Using Output Directory ${OutputDir:=$OutputDirDefault}"
echo "Using hapmap files located in ${HapMapDir:=$HapMapDirDefault}"

if [ ! -e "${BimFile}" ] || [ ! -e "${FamFile}" ] || [ ! -e "${BedFile}" ]
then
  echo "Warning: One or more input files does not exist. Please perform relatedness filtering to generate. Exiting."
  exit 1
fi

if [ ! -e "${HapMapDir}"/*.bim ] || [ ! -e "${HapMapDir}"/*.bed ] || [ ! -e "${HapMapDir}"/*.fam ] || [ ! -d "${HapMapDir}" ]
then
	echo "Warning: Could not find files necessary for hapmap merge. Exiting."
	exit 1
fi

if [ ! -d "${OutputDir}" ]
then
	mkdir "${OutputDir}"
fi

if [ ! -d "${OutputDir}"/hapmap ]
then
	mkdir "${OutputDir}"/hapmap
fi

if [ ! -d "${OutputDir}"/PCA ]
then
	mkdir "${OutputDir}"/PCA
fi


#If you would like to remove outliers from relatedness do so here
if [ "${Prefilter}" = "remove" ] 
then
	plink --bed "${BedFile}" --bim "${BimFile}" --fam "${FamFile}" --remove "${RemoveList}" --make-bed --out "${OutputDir}"/hapmap/00remove_outliers
	BedFile="${OutputDir}"/hapmap/00remove_outliers.bed
	BimFile="${OutputDir}"/hapmap/00remove_outliers.bim
	FamFile="${OutputDir}"/hapmap/00remove_outliers.fam
fi

#Liftover if necessary
#Translate SNP from Affy to rsid if necessary
if [ "${RunAffy:=RunAffyDefault}" = T ] && [ -e "${AffymetrixAnnotations:?Affy annotation dne}" ]
then
	Rscript  ~/gwasqc_pipeline/Rscripts/AffyToRsid.R --bim "${BimFile}" --stats "${AffymetrixAnnotations}" -o "${OutputDir}"/hapmap/ 
	plink --bed "${BedFile}" --bim "${OutputDir}"/hapmap/00rsID_format.bim --fam "${FamFile}" --make-bed --out "${OutputDir}"/hapmap/00premerge
	BedFile="${OutputDir}"/hapmap/00premerge.bed
	BimFile="${OutputDir}"/hapmap/00premerge.bim
	FamFile="${OutputDir}"/hapmap/00premerge.fam
fi

#6a Hapmap merge
plink --bed "${BedFile}" --bim "${BimFile}" --fam "${FamFile}" --bmerge "${HapMapDir}"/*.bed "${HapMapDir}"/*.bim "${HapMapDir}"/*.fam --make-bed --out "${OutputDir}"/hapmap/01primarymerge

if [ -e "${OutputDir}"/hapmap/01primarymerge-merge.missnp ] #Some gwas don't produce missnp files and these commands only apply to those
then
	#6b create new hapmap files without the missing snps
	plink --bed "${HapMapDir}"/*.bed  --bim "${HapMapDir}"/*.bim --fam "${HapMapDir}"/*.fam --exclude "${OutputDir}"/hapmap/01primarymerge-merge.missnp --make-bed --out "${OutputDir}"/hapmap/02hapmap_withoutmissing
	#6c Hapmap merge again without missing snps
	plink --bed "${BedFile}" --bim "${BimFile}" --fam "${FamFile}" --bmerge "${OutputDir}"/hapmap/02hapmap_withoutmissing.bed "${OutputDir}"/hapmap/02hapmap_withoutmissing.bim "${OutputDir}"/hapmap/02hapmap_withoutmissing.fam --make-bed --out "${OutputDir}"/hapmap/03Withoutmissing
	#6d Filter merged file to SNPs with >90% genotypes
	plink --bfile "${OutputDir}"/hapmap/03Withoutmissing --geno "${GenotypingThreshold:=$GenotypingThresholdDefault}" --maf "${Maf:=$MafDefault}" --chr 1-22 --make-bed --out "${OutputDir}"/hapmap/"04Without_missing_geno${GenotypingThreshold}_noX"
	Bfile="${OutputDir}"/hapmap/"04Without_missing_geno${GenotypingThreshold}_noX"
else
	#6d Filter merged file to SNPs with >90% genotypes
	plink --bfile "${OutputDir}"/hapmap/01primarymerge --geno "${GenotypingThreshold:=$GenotypingThresholdDefault}" --maf "${Maf:=$MafDefault}" --chr 1-22 --make-bed --out "${OutputDir}"/hapmap/"02-04geno${GenotypingThreshold}_noX"
	Bfile="${OutputDir}"/hapmap/"02-04geno${GenotypingThreshold}_noX"
fi

#6e Creat list of LD pruned snps
plink --bfile "${Bfile}" --indep-pairwise 50 5 0.3 --chr 1-22 --out "${OutputDir}"/hapmap/05LD_prune_list
#6g extract LD pruned snps
plink --bfile "${Bfile}" --extract "${OutputDir}"/hapmap/05LD_prune_list.prune.in --chr 1-22 --make-bed --out "${OutputDir}"/hapmap/07final_LDpruned
#6h Run PCA
plink --bfile "${OutputDir}"/hapmap/07final_LDpruned --pca "${PCA:=$PCADefault}"  header --out "${OutputDir}"/PCA/pca

Rscript ~/gwasqc_pipeline/Rscripts/PCA.R --hapmapdir "${HapMapDir}" --val "${OutputDir}"/PCA/pca.eigenval --vec "${OutputDir}"/PCA/pca.eigenvec --fam "${OutputDir}"/hapmap/07final_LDpruned.fam --outputdir "${OutputDir}"/PCA/

